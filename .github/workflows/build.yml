name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            python-version: "3.9"
          - os: ubuntu-22.04
            python-version: "3.10"
          - os: ubuntu-22.04
            python-version: "3.11"
          - os: macos-13
            python-version: "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: false
          channels: andrsd,defaults

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          conda install \
            cmake \
            make \
            fmt==9.1.0 \
            hdf5 \
            eigen \
            pybind11 \
            flake8 \
            pytest \
            lcov

      - name: Configure
        run: |
          cmake -S . -B ${{ github.workspace }}/build \
            -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
            -DFPROPS_BUILD_TESTS=YES \
            -DFPROPS_WITH_PYTHON=YES \
            -DFPROPS_CODE_COVERAGE=YES

      - name: Build
        run: cmake --build ${{ github.workspace }}/build

      - name: Install
        run: cmake --install ${{ github.workspace }}/build

      - name: Run unit tests
        run: |
          ${{ github.workspace }}/build/test/fprops-test

      - name: Run python tests
        run: |
          pytest ${{ github.workspace }}/python/tests

      - name: Generate code coverage
        if: startsWith(matrix.os, 'ubuntu')
        run: cmake --build ${{ github.workspace }}/build --target coverage

      - name: Upload coverage artifact
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
          path: ${{ github.workspace }}/build/coverage.info

  upload-to-codecov:
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
